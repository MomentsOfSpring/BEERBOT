import os
import logging

from telebot import types
from permissions import boss_only
from config import bot, BOSS, PHOTOS, RULES_FILE, HELP_FILE, INVITE, MAGIC_CHAT_ID, BARTENDER
from polls import create_poll, unpin_poll
from utils import generate_report, clear_poll_results, clear_poll_id
from buttons import send_reservation_buttons


# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logger = logging.getLogger(__name__)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
def help_command(message):
    logger.info(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    try:
        with open(HELP_FILE, 'r', encoding='utf-8') as t:
            help_text = t.read()
        bot.send_message(message.chat.id, help_text)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∞–≤–∏–ª: {e}")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /invite
def invite_link(message):
    bot.send_message(message.chat.id, f'–°—Å—ã–ª–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:\n {INVITE}')


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /rules
def beer_rules(message):
    media = []
    logger.info(f"–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {os.getcwd()}")
    logger.info(f"–ü—É—Ç–∏ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º: {PHOTOS}")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
    for path in PHOTOS:
        logger.info(f"–ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª: {path}")
        if not os.path.exists(path):
            logger.error(f"–§–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {path}")
            continue
        try:
            with open(path, 'rb') as photos:
                media.append(types.InputMediaPhoto(photos.read()))
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ñ–∞–π–ª–∞ {path}: {e}")
            continue
        
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã
    if media:
        bot.send_message(message.chat.id, "–©–∞ –≤—Å—ë —É–∑–Ω–∞–µ—à—å.")
        try:
            bot.send_media_group(message.chat.id, media)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã: {e}")
            bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–∞–≤–∏–ª
    try:
        with open(RULES_FILE, 'r', encoding='utf-8') as t:
            rules_text = t.read()
        bot.send_message(message.chat.id, rules_text)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –ø—Ä–∞–≤–∏–ª: {e}")
        bot.send_message(message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ø—Ä–∞–≤–∏–ª")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
def greet_new_members(message):
    chat_id = message.chat.id
    for new_user in message.new_chat_members:
        user_id = new_user.id
        try:
            bot.restrict_chat_member(
                chat_id,
                user_id,
                permissions=types.ChatPermissions(can_send_messages=False)
            )
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton("–î–∞", callback_data=f"beer_yes_{user_id}"),
                types.InlineKeyboardButton("–ù–µ—Ç", callback_data=f"beer_no_{user_id}")
            )
            bot.send_message(
                chat_id,
                f"–ü—Ä–∏–≤–µ—Ç, {new_user.first_name}! –¢—ã –ª—é–±–∏—à—å –ø–∏–≤–æ?",
                reply_markup=markup
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–∏ –ø—Ä–∞–≤ –Ω–æ–≤–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ {user_id}: {e}")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –Ω–∞ —Ç–µ–∫—Å—Ç:
def info(message):

    # –í–µ–∂–ª–∏–≤–æ—Å—Ç—å –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å.
    if '–ø—Ä–∏–≤–µ—Ç' in message.text.lower():
        bot.send_message(message.chat.id, f'–ù—É –ø—Ä–∏–≤–µ—Ç, {message.from_user.first_name} {message.from_user.last_name or ""}..')

    # NO CEDH
    # CEDH CLUB
    elif (("cedh" in message.text.lower()
          or "cdh" in message.text.lower()
          or "—Ü–µ–¥—Ö" in message.text.lower()
          or "—Ü–¥—Ö" in message.text.lower())
          or "–∫–æ–º–ø–æ—Ç" in message.text.lower()
          or "–∫–æ–º–ø–µ—Ç–∏—Ç–∏–≤" in message.text.lower()):
        bot.reply_to(message, "–ù–∏ —Å–ª–æ–≤–∞ –ø—Ä–æ CEDH –≤ —ç—Ç–æ–º —á–∞—Ç–µ!")

    # Glory to Bot
    elif (("–±–æ—Ç –∫—Ä—É—Ç–æ–π" in message.text.lower()
          or "–∫—Ä—É—Ç–æ–π –±–æ—Ç" in message.text.lower()
          or "–∫–ª–∞—Å—Å–Ω—ã–π –±–æ—Ç" in message.text.lower()
          or "–±–æ—Ç –∫–ª–∞—Å—Å–Ω—ã–π" in message.text.lower())
          or "—Ö–æ—Ä–æ—à–∏–π –±–æ—Ç" in message.text.lower()
          or "–±–æ—Ç —Ö–æ—Ä–æ—à–∏–π" in message.text.lower()):
        bot.reply_to(message, "–°–ø–∞—Å–∏–±–æ, –±—Ä–æ! –û–±–Ω—è–ª, –ø–æ—Ü–µ–ª–æ–≤–∞–ª (–Ω–µ –ø–æ-–≥–µ–π—Å–∫–∏)!")

    # –°—Ç–∞—Å Special
    elif "—Å—Ç–∞—Å" in message.text.lower():
        bot.reply_to(message, f"–ë–ª–∏–Ω–±, –°—Ç–∞—Å.... ü§§ ")


# ============================== –ö–û–ú–ê–ù–î–´ –†–£–ß–ù–û–ì–û –ó–ê–ü–£–°–ö–ê ==============================

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /pollnow
@boss_only
def manual_poll(message):
    """–°–û–ó–î–ê–¢–¨ –û–ü–†–û–° –í–†–£–ß–ù–£–Æ"""
    create_poll(bot)
    bot.send_message(BOSS, "–û–ø—Ä–æ—Å –∑–∞–ø—É—â–µ–Ω –≤—Ä—É—á–Ω—É—é.")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /pollres
@boss_only
def manual_poll_results(message):
    """–û–¢–ü–†–ê–í–ò–¢–¨ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –í–†–£–ß–ù–£–Æ"""
    report, tables = generate_report()
    unpin_poll(bot)

    if report is None or tables == 0:
        # –ù–∏–∫—Ç–æ –Ω–µ –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª "–î–∞"
        bot.send_message(BOSS, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.")
        try:
            bot.send_message(MAGIC_CHAT_ID, "–†–µ–∫–∏ –ø–∏–≤–∞ –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –Ω–µ—Ç—Ä–æ–Ω—É—Ç—ã–º–∏..")
            bot.send_message(BARTENDER, "–ü—Ä–∏–≤–µ—Ç, —Å–µ–≥–æ–¥–Ω—è –±–µ–∑ –±—Ä–æ–Ω–∏. –£ –º–∞–≥–æ–≤ –Ω–µ–¥–µ–ª—è —Ç—Ä–µ–∑–≤–æ—Å—Ç–∏.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ '–Ω–µ –ø—Ä–∏–¥–µ–º' –±–∞—Ä–º–µ–Ω—É: {e}")
        clear_poll_results()
        clear_poll_id()
        return

    try:
        bot.send_message(BOSS, "–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –≤—Ä—É—á–Ω—É—é.")
        bot.send_message(BOSS, report)
        send_reservation_buttons(BOSS)
        bot.send_message(
            MAGIC_CHAT_ID,
            "–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.\n–í—Å–µ–º –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–≤—à–∏–º –ª–µ—Ç–∏—Ç –ø–ª–æ—Ç–Ω–∞—è —Ä–µ—Å–ø–µ–∫—Ç—É–ª—è.\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø—Ä–æ—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ë–æ—Å—Å—É."
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ë–æ—Å—Å—É: {e}")
        try:
            bot.send_message(BOSS, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, –ë–æ—Å—Å.")
        except:
            pass

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /gameon
@boss_only
def manual_gameon(message):
    """–ü–û–ñ–ï–õ–ê–¢–¨ –•–û–†–û–®–ï–ô –ò–ì–†–´ –í–†–£–ß–ù–£–Æ"""
    bot.send_message(MAGIC_CHAT_ID, "–•–æ—Ä–æ—à–µ–π –∏–≥—Ä—ã, –≥–æ—Å–ø–æ–¥–∞ –º–∞–≥–∏!\n–ü—É—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç —Ö–æ—Ç—å –∫—Ç–æ-–Ω–∏–±—É–¥—å, –∞ –Ω–∞–ø—å–µ—Ç—Å—è –ø–∏–≤–∞ —Å–∏–ª—å–Ω–µ–π—à–∏–π!")
    bot.send_message(BOSS, "–ü–æ–∂–µ–ª–∞–Ω–∏–µ —Ö–æ—Ä–æ—à–µ–π –∏–≥—Ä—ã –∑–∞–ø—É—â–µ–Ω–æ –≤—Ä—É—á–Ω—É—é.")








